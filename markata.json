{"config": {"glob_patterns": ["pages/**/*.md"], "hooks": ["markata.plugins.publish_source", "markata.plugins.prevnext", "markata.plugins.service_worker", "default"], "disabled_hooks": ["markata.plugins.seo"], "markdown_extensions": [], "default_cache_expire": 1209600, "output_dir": "markout", "assets_dir": "static", "version": 0, "edit": false, "url": "https://example.com", "description": "A blog created from the markata blog-starter", "title": "markata-starter-blog-example", "rss_description": "A blog created from the markata blog-starter", "author_name": "test", "author_email": "test", "site_name": "markata-starter-blog-example", "theme_color": "#322D39", "background_color": "#B73CF6", "start_url": "/", "short_name": "markata-starter-blog-example", "display": "minimal-ui", "icon": "icon.png", "nav": {"Home": "/", "All Posts": "/archive"}, "prevnext": {"strategy": "first", "prevnext_color_text": "white", "prevnext_color_text_light": "black", "prevnext_color_angle": "white", "prevnext_color_angle_light": "black"}, "auto_description": {"description": {"len": 160}, "long_description": {"len": 250}, "super_description": {"len": 500}, "cache_expire": 1209600, "config_key": "auto_description"}, "auto_publish": {"filters": {"til": "templateKey=='til' and date<=today and status != 'draft'"}}, "head": {"text": "<title>{{ title|e }}</title>", "meta": [{"name": "twitter:title", "content": "{{ title|e }}"}, {"name": "og:title", "content": "{{ title|e }}"}, {"name": "description", "content": "{{ description|e }}"}, {"name": "og:description", "content": "{{ description|e }}"}, {"name": "twitter:description", "content": "{{ description|e }}"}, {"name": "og:type", "content": "article"}, {"name": "og:url", "content": "{{ config.url }}/{{ slug }}/"}, {"name": "og:image", "content": "{{ config.url }}/{{ slug }}.jpg"}, {"name": "og:image:width", "content": 1200}, {"name": "og:image:height", "content": 600}, {"name": "twitter:creator", "content": "@test"}, {"name": "twitter:card", "content": "summary_large_image"}, {"name": "og:author", "content": "test"}, {"name": "og:site_name", "content": "markata-starter-blog-example"}, {"name": "og:author_email", "content": "test"}, {"name": "generator", "content": "markata {{ __version__ }}"}, {"name": "theme-color", "content": "#322D39"}], "link": [{"href": "{{ config.url }}/{{ slug }}/", "rel": "canonical"}]}, "feeds": {"archive": {"filter": "date<=today and post.get('published', False)", "sort": "date", "template": "/home/runner/work/markata-starter-blog-example/markata-starter-blog-example/.venv/lib/python3.10/site-packages/markata/plugins/default_post_template.html"}, "all": {"filter": "True", "sort": "date", "template": "/home/runner/work/markata-starter-blog-example/markata-starter-blog-example/.venv/lib/python3.10/site-packages/markata/plugins/default_post_template.html"}, "published": {"filter": "date<=today and post.get('published', False)", "sort": "date", "template": "/home/runner/work/markata-starter-blog-example/markata-starter-blog-example/.venv/lib/python3.10/site-packages/markata/plugins/default_post_template.html"}, "draft": {"filter": "date>today or not post.get('published', False)", "sort": "date", "template": "/home/runner/work/markata-starter-blog-example/markata-starter-blog-example/.venv/lib/python3.10/site-packages/markata/plugins/default_post_template.html"}}, "precache_urls": ["./", "/draft/", "/all/", "index.html", "/archive/", "/published/"]}, "articles": [{"cover": "", "title": "Home Page", "tags": ["home", "meta"], "status": "draft", "templateKey": "", "path": "pages/index.md", "description": "Welcome to the Markata starter blog, this is your home page to edit and make Here are some pages to help get you started. Feel free to delete them and and {% fo", "content": "Welcome to the Markata starter blog, this is your home page to edit and make\nyour own.  Edit this page in `pages/index.md`.\n\n## Some helpful pages\n\nHere are some pages to help get you started. Feel free to delete them and and\nmake this site your own.\n\n\n!!! note \"[Building the Site](building-the-site)\"\n    The first thing you will want to do is make sure that you can build your site and see it in the browser.  Markata builds static websites using a python based cl... _[read more](building-the-site)_\n\n!!! note \"[Jinja Variables](jinja)\"\n    Markata uses python The veresion of markata used to build the site. ({{  A python datetime object. ({{date.today()}}) All variables from your post frontmatter l... _[read more](jinja)_\n\n!!! note \"[Loading Markata into Ipython](ipython)\"\n    Setting up the ipython extension is completely optional, and not You can add markata to your I don If you have the extension active an instance will automatical... _[read more](ipython)_\n\n!!! note \"[Your Own Style](your-own-style)\"\n    ... _[read more](your-own-style)_\n\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/building-the-site'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Building the Site</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/your-own-style'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Your Own Style</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-09-01", "published": false, "edit_link": "https://github.com/edit/main/pages/index.md", "today": "2022-10-21", "now": "2022-10-21 14:00:41.746718", "datetime": "2022-09-01 00:00:00+00:00", "slug": "index", "output_html": "markout/index.html", "long_description": "Welcome to the Markata starter blog, this is your home page to edit and make Here are some pages to help get you started. Feel free to delete them and and {% for post in markata.map(", "super_description": "Welcome to the Markata starter blog, this is your home page to edit and make Here are some pages to help get you started. Feel free to delete them and and {% for post in markata.map(", "jinja": false, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f0968923550>, next=<frontmatter.Post object at 0x7f0968923220>)"}, {"cover": "", "title": "Loading Markata into Ipython", "tags": ["home", "meta"], "status": "draft", "templateKey": "", "path": "pages/ipython.md", "description": "Setting up the ipython extension is completely optional, and not You can add markata to your I don If you have the extension active an instance will automatical", "content": "## Ipython extension\n\nSetting up the ipython extension is completely optional, and not\nrequired, but there for pure convenience.\n\n!!! note \"## [Building the Site](building-the-site)\"\n    The first thing you will want to do is make sure that you can build your site and see it in the browser.  Markata builds static websites using a python based cl\n\n!!! note \"## [Jinja Variables](jinja)\"\n    Markata uses python The veresion of markata used to build the site. ({{  A python datetime object. ({{date.today()}}) All variables from your post frontmatter l\n\n!!! note \"## [Loading Markata into Ipython](ipython)\"\n    Setting up the ipython extension is completely optional, and not You can add markata to your I don If you have the extension active an instance will automatical\n\n!!! note \"## [Your Own Style](your-own-style)\"\n    \n\n\n\n\n\nYou can add markata to your\n`~/.ipython/profile_default/ipython_config.py` as reccomended by\nipython with the snippet below.\n\n``` python\nc.InteractiveShellApp.extensions.append('markata')\n```\n\nI don't prefer this because I also have ipython installed in\nenvironments without markata installed, so I do the following in\nmy personal config so that it does not error when missing markata.\n\n``` python\nimport importlib\n\n\ndef activate_extension(extension):\n    try:\n        mod = importlib.import_module(extension)\n        getattr(mod, \"load_ipython_extension\")\n        c.InteractiveShellApp.extensions.append(extension)\n    except ModuleNotFoundError:\n        \"extension is not installed\"\n    except AttributeError:\n        \"extension does not have a 'load_ipython_extension' function\"\n\n\nextensions = [\"markata\", ]\nfor extension in extensions:\n    activate_extension(extension)\n```\n\n## Loading a markata instance\n\nIf you have the extension active an instance will automatically be created and\navailable as `m` as well as `markata`.\n\n``` python\nm\n# or\nmarkata\n```\n\nIf you opt out of setting up the extension or use something other than ipython\nyou can make an instance yourself.\n\n``` python\nfrom markata import Markata\n\nm = Markata()\n```\n\n## Looking through articles\n\nOnce you have an instance of `markata` in memory you can look through your\narticles using the list of articles, or the map function.\n\n\n``` python\n# get a list of frontmatter.Post objects\nm.articles\n\n# leverage the map function to filter\nm.map('post', filter='\"python\" in tags')\nm.map('post', filter='date>today')\n```\n\n## Map\n\nThe map function \n\n`func`: What to return as the item in the list. This can ve a single attribute\nlike `title`, or `tags`, or the full post `post`.  It can also be any string of\npython like `'date>today'` or something more complicated like\n`f'''\"{markata.config['url']}/\" + slug'''`\n\n``` python\nm.map('post')\nm.map('title')\nm.map('slug')\n\nm.map('\"python\" in tags')\nm.map(f'''\"{markata.config['url']}/\" + slug''')\n```\n\n`filter`: Filter is also just a string of python similar to the `func`\nargument, but it filters based on the boolean value of the result.  You can do\nthings like look for published posts `published`, check for posts posted before\ntoday `date<today`, or articles with certain tags `\"python\" in tags`.\n\n``` python\nm.map(filter='published')\nm.map(filter='date<today')\nm.map(filter='\"python\" in tags')\n```\n\n`sort`: Sort will try to sort your articles based on the value returned.\n\n``` python\nm.map(sort='title')\nm.map(sort='date')\nm.map(sort='order')\n```\n\n`reverse`: Reverse the results returned by map with the `reverse` flag.\n\n``` python\nm.map(reverse=False)\nm.map(reverse=True)\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/your-own-style'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Your Own Style</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/jinja'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Jinja Variables</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-09-04", "published": true, "edit_link": "https://github.com/edit/main/pages/ipython.md", "today": "2022-10-21", "now": "2022-10-21 14:00:41.746727", "datetime": "2022-09-04 00:00:00+00:00", "slug": "ipython", "output_html": "markout/ipython/index.html", "long_description": "Setting up the ipython extension is completely optional, and not You can add markata to your I don If you have the extension active an instance will automatically be created and If you opt out of setting up the extension or use something other than i", "super_description": "Setting up the ipython extension is completely optional, and not You can add markata to your I don If you have the extension active an instance will automatically be created and If you opt out of setting up the extension or use something other than ipython Once you have an instance of  The map function func filter sort reverse", "jinja": false, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f0968923220>, next=<frontmatter.Post object at 0x7f0968923d90>)"}, {"cover": "", "title": "Building the Site", "tags": ["home", "meta"], "status": "draft", "templateKey": "", "path": "pages/building-the-site.md", "description": "The first thing you will want to do is make sure that you can build your site and see it in the browser.  Markata builds static websites using a python based cl", "content": "The first thing you will want to do is make sure that you can build your site and see it in the browser.  Markata builds static websites using a python based cli that can be setup with very few steps once you have python 3.7+ installed.  You will have to become at least a little bit comfortable running some commands from the command line to run the build.\n\n\n## Installation\n\nThis site comes with a `pyproject.toml` that can be used by hatch to\nautomatically take care of your virtual environments for you.\n\n``` bash\npip install hatch\n```\n\n## Building the site, Leveraging Hatch\n\nHatch comes with a nice system for creating scirpts that you can run in your\nmanaged virtual environment with less effort of managing.  You can create any\nthat you want in your own `pyproject.toml`, but these come with the template\nout of the box.\n\n``` bash\n# builds the site\nhatch run build\n\n# clean's cache and output directory\nhatch run clean\n\n# clean's cache and output directory, and builds\nhatch run clean-build\n\n# runs a development server, watches for changes and rebuilds.\nhatch run tui\n\n# run's clean then start's the tui\nhatch run clean-tui\n\n# just serve markout at localhost:8000\nhatch run serve\n```\n\nOnce you have the site up and running, open your browser to\n[http://localhost:8000](http://localhost:8000).\n\n> Note,if you already have something running on port `8000` hatch run serve will give\n> you an error, but hatch run tui will automatically choose the next available port.\n> Make sure you open the right link in your browser.\n\n## Building the site, vanilla\n\nYou will want to install everything in a virtual environment to prevent\nyourself from clogging up your system python, or trying to run two versions of\n`markata` for different projects.\n\n``` bash\n# using hatch for the virtual environment\nhatch shell\n\n# using venv\npython -m venv .venv\n. ./.venv/bin/activate\npip install -e .\n```\n\nOnce you have your virtual environment created and activated you can use the\nmarkata cli plugin to build your site.\n\n``` bash\n# builds the site\nmarkata build\n\n# clean's cache and output directory\nmarkata clean\n\n# runs a development server, watches for changes and rebuilds.\nmarkata tui\n```\n\n## repl or script\n\nIt's also possible to run the build from a repl like ipython or a python\nscript.\n\n``` python\nfrom markata import Markata\n\nm = Markata()\nm.run()\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/jinja'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Jinja Variables</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/your-own-style'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Your Own Style</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-09-02", "published": true, "edit_link": "https://github.com/edit/main/pages/building-the-site.md", "today": "2022-10-21", "now": "2022-10-21 14:00:41.746733", "datetime": "2022-09-02 00:00:00+00:00", "slug": "building-the-site", "output_html": "markout/building-the-site/index.html", "long_description": "The first thing you will want to do is make sure that you can build your site and see it in the browser.  Markata builds static websites using a python based cli that can be setup with very few steps once you have python 3.7+ installed.  You will hav", "super_description": "The first thing you will want to do is make sure that you can build your site and see it in the browser.  Markata builds static websites using a python based cli that can be setup with very few steps once you have python 3.7+ installed.  You will have to become at least a little bit comfortable running some commands from the command line to run the build. This site comes with a  Hatch comes with a nice system for creating scirpts that you can run in your Once you have the site up and running, op", "jinja": false, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f0968923d90>, next=<frontmatter.Post object at 0x7f0968923220>)"}, {"cover": "", "title": "Jinja Variables", "tags": ["home", "meta"], "status": "draft", "templateKey": "", "path": "pages/jinja.md", "description": "Markata uses python The veresion of markata used to build the site. ({{  A python datetime object. ({{date.today()}}) All variables from your post frontmatter l", "content": "Markata uses python's powerful jinja2 templating library for its templates as well as giving authors the ability to inject variables right into their markdown posts. This post contains quite a few examples of using jinja variables, compare it's output in the browser to the raw markdown file in `pages/jinja.md`.\n\n### `__version__`\n\nThe veresion of markata used to build the site. (0.5.2)\n\n### date\n\nA python datetime object. (2022-10-21) \n\n### Frontmatter\n\nAll variables from your post frontmatter like `title` (Jinja Variables) and `tags` (['home', 'meta']). If you are not familiar with frontmatter it's the content at the top\nof a markdown file between `---`.  Markata uses the most common type of\nfrontmatter, `yaml`.\n\n```md\n---\n# this is the frontmatter\ndate: 2022-09-29 13:26:33\ntitle: Home Page\n\n---\n\n## the post\n\nmarkdown gets written after the frontmatter\n\n```\n\n##  markata\n\nThe last variable exposed is an instance of `markata.Markata` called `markata`.\nThis allows you to reference all of your other posts in very interesting ways.\nsuch as getting the latest post -> [Your Own Style](/your-own-style)\n\nYou can also map over posts to get more.\n\n## Last Three Posts\n\n\n*  [Your Own Style](your-own-style)\n*  [Loading Markata into Ipython](ipython)\n*  [Jinja Variables](jinja)\n\n## Last Three Python posts\n\n\n*  [Your Own Style](your-own-style)\n*  [Loading Markata into Ipython](ipython)\n*  [Jinja Variables](jinja)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/ipython'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Loading Markata into Ipython</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/building-the-site'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Building the Site</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-09-03", "published": true, "config_overrides": {"head": {"text": "<style>\n    ul {\n        list-style-type: None;\n    }\n    li a {\n        background: rgba(255,255,255,.1);\n        margin: .2rem;\n    }\n</style>\n"}}, "edit_link": "https://github.com/edit/main/pages/jinja.md", "today": "2022-10-21", "now": "2022-10-21 14:00:41.746738", "datetime": "2022-09-03 00:00:00+00:00", "slug": "jinja", "output_html": "markout/jinja/index.html", "long_description": "Markata uses python The veresion of markata used to build the site. ({{  A python datetime object. ({{date.today()}}) All variables from your post frontmatter like  The last variable exposed is an instance of  You can also map over posts to get more.", "super_description": "Markata uses python The veresion of markata used to build the site. ({{  A python datetime object. ({{date.today()}}) All variables from your post frontmatter like  The last variable exposed is an instance of  You can also map over posts to get more. {% for post in markata.map( [ {% for post in markata.map( [", "jinja": false, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f0968923d00>, next=<frontmatter.Post object at 0x7f0968923550>)"}, {"cover": "", "title": "Your Own Style", "tags": ["home", "meta"], "status": "draft", "templateKey": "", "path": "pages/your-own-style.md", "description": "", "content": "## Make posts your own style\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #e1bd00c9;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Home Page</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/ipython'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Loading Markata into Ipython</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-09-05", "published": true, "edit_link": "https://github.com/edit/main/pages/your-own-style.md", "today": "2022-10-21", "now": "2022-10-21 14:00:41.746743", "datetime": "2022-09-05 00:00:00+00:00", "slug": "your-own-style", "output_html": "markout/your-own-style/index.html", "long_description": "", "super_description": "", "jinja": false, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f0968922f80>, next=<frontmatter.Post object at 0x7f0968923d00>)"}]}